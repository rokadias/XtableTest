services:
  mdns:
    container_name: "docker-mdns"
    image: "ghcr.io/phyber/docker-mdns:amd64-latest"

    # We need to be able to see the real IP addresses on the host, so we need
    # host networking mode.
    network_mode: "host"

    # Set this to the name of the interface with the IP addresses you'd like to
    # announce for your hostnames.
    # Both IPv4 and IPv6 addresses will be used.
    command:
      - "wlan0"

    # We need to be able to read docker.sock to watch for container events,
    # and we need to be able to write to the system d-bus socket to add
    # hostnames in Avahi
    volumes:
      - "/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  xtables:
    container_name: "xtables"
    networks:
      - xtables-network
    build:
      context: ./XtableServer/
      dockerfile: ./Dockerfile
    labels:
      docker-mdns.enable: "true"
      docker-mdns.host: "XTABLES.local"
    ports:
      - "0.0.0.0:4880:4880"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  xdash:
    container_name: "xdash"
    networks:
      - xtables-network
    depends_on:
      - xtables
    build:
      context: ./XDash
      dockerfile: ./Dockerfile
    labels:
      docker-mdns.enable: "true"
      docker-mdns.host: "XDASH.local"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  java-producer:
    container_name: "java-producer"
    networks:
      - xtables-network
    image: "xtable-java-test"
    build:
      context: ./
      dockerfile: ./Dockerfile
    depends_on:
      - xtables
    command: -e -Dexec.mainClass="org.saqib.ProducerClient"
    labels:
      docker-mdns.enable: "true"
      docker-mdns.host: "JavaProducer.local"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  java-consumer:
    container_name: "java-consumer"
    networks:
      - xtables-network
    image: "xtable-java-test"
    depends_on:
      - xtables
    command: -e -Dexec.mainClass="org.saqib.ConsumerClient"
    labels:
      docker-mdns.enable: "true"
      docker-mdns.host: "JavaConsumer.local"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  python-consumer:
    container_name: "python-consumer"
    networks:
      - xtables-network
    image: "xtable-python-test"
    build:
      context: ./python
      dockerfile: ./Dockerfile
    depends_on:
      - xtables
    labels:
      docker-mdns.enable: "true"
      docker-mdns.host: "PythonConsumer.local"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

networks:
  xtables-network:
    driver: bridge
